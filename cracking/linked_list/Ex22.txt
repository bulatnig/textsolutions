Return Kth to Last: Implement an algorithm to find the kth to last element of a singly linked list.

Examples:
1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 , 4 = 5

Questions:
Is list guaranteed to have K elements? - Yes


Solution 1

Iterate through K first elements. Once first Kth element is found add another pointer to the first element. Now iterate through the list moving both pointers until first pointer reaches the end of the list. Then the second pointer will be pointing to Kth to last element. Return it.
Runtime O(N)

Implementation

class Ex22 {

  static class Node {
    int value;
    int Node next;
    
    Node(int value, Node node) {
      this.value = value;
      this.node = node;
    }
    
  }
  
  static Node findKthToLast(Node head, int k) {
    var pointer1 = head;
    for (int i = 1; i < k; i++) {
      pointer1 = pointer1.next;
    }
    var pointer2 = head;
    while (pointer1.next != null) {
      pointer1 = pointer1.next;
      pointer2 = pointer2.next;
    }
    return pointer2;
  }

}
