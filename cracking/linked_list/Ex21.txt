Remove Dups: Write code to remove duplicates from an unsorted linked list. 
Follow up
How would you solve this problem if a temporary buffer is not allowed.

Examples:
a - b - c - a - d - b  => a - b - c - d

Best Conceivable Runtime: O(N) - because we have to visit all elements at least once

Solution 1
Iterate through the list putting each element value into a HashSet. If element value is already in HashSet, then remove current element from the list.
Runtime O(N), memory O(N)

Solution 2
If temporary buffer isn't allowed then iterate through the list. For each element go through the rest of the list and remove duplicates from the list.
Runtime O(N*N), memory O(1)


Implementation

class Ex21 {

  static class Node {
  
    int value;
    Node next;
    
    Node(int value, Node next) {
      this.value = value;
      this.next = next;
    }
  
  }

  static void removeDuplicates(Node head) {
    for (var p1 = head; p1 != null; p1 = p1.next) {
      var p2 = p1;
      while (p2.next != null) {
        if (p2.next.value == p1.value) {
          p2.next = p2.next.next;
        } else {
          p2 = p2.next;
        }
      }
    }
  }

}


