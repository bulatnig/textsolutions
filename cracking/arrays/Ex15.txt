One Away: There are three types of edits that can be performed on strings: insert a character, remove a character, or replace a character. Given two strings, write a function to check if they are one edit (or zero edits) away.

Example
pale, ple   -> true
pales, pale -> true
pale, bale  -> true
pale, bake  -> false

Questions:
Both strings are empty or null, what's the expected result?

Best Concievable Runtime: O(N) where N is length of shorter string

Solution 1
If string lengths are different by more than 1, they can't be one edit away, return false.
If both strings are of the same size, go through both strings in parallel and compare corresponding characters. If there are more than 1 character different, return false as soon as we hit second diff.
If strings are different by 1 character, then go char by char until non-matching character met. Move pointer to the next character of longer string and continue comparing characters. If there is another mismatch, then return false.
Runtime O(N)

Implementation Java

class Ex15 {

    static boolean isOneAway(String s1, String s2) {
        var diff = s1.length() - s2.length();
        if (diff > 1 || diff < -1) {
            return false;
        }
        var mismatchSeen = false;
        for (int i = 0, j = 0; i < s1.length() && j < s2.length(); i++, j++) {
            if (s1.charAt(i) != s2.charAt(j)) {
                if (mismatchSeen) {
                    return false;  // second mismatch character
                } else {
                    mismatchSeen = true;
                    if (diff > 0) {
                        i++;
                    } else if (diff < 0) {
                        j++;
                    }
                }
            }
        }
        return true;
    }

}


