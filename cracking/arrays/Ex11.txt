Is Unique: Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?


Examples:
abcdefg - unique
abcda - not unique
'' - not unique


Questions:
Is empty string unique?


Solution 1
For each character iterate through the rest of the characters and exit as soon as we find the same character again. Runtime O(N*N)

Solution 2
Use a hashmap or byte size array if we know that all characters are ASCII and use code of a character as an index. For each character check if it's already in a hashmap. If it's not, add it. If it is, then return False (not unique char string). Runtime O(N). Memory O(C) where C is the size of the alphabet of the string.

Solution 3.
Without additional data structures, we can sort a string first and then go through it comparing each character to previous one. If current and previous are the same, that means we have duplicate characters. Runtime O(NlogN).


Implementation Java


class Solution {

  boolean isUnique(String input) {
    var characters = input.toArray();
    Arrays.sort(characters);
    for (int i = 1; i < characters.size; i++) {
      if (characters[i] == characters[i-1]) {
        return false;
      }
    }
    return true;
  }

  public static void main(String[] args) {
    
  }

}


Implementation Python


def is_unique(input: str) -> bool:
    characters = list(input)
    characters.sort()
    for i in range(1, len(characters)):
        if characters[i] == characters[i - 1]:
            return False
    return True
  
